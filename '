return {
  "olimorris/codecompanion.nvim",
  dependencies = {
    "nvim-lua/plenary.nvim",
    "nvim-treesitter/nvim-treesitter",
    "hrsh7th/nvim-cmp", -- Optional: for using slash commands and variables in the chat buffer
    "nvim-telescope/telescope.nvim", -- Optional: for using slash commands
    { "stevearc/dressing.nvim", opts = {} }, -- Optional: improves the default Neovim interfaces
  },
  config = function()
    require("codecompanion").setup({
      strategies = {
        chat = {
          adapter = "codellama",
        },
        inline = {
          adapter = "collama",
        },
        agent = {
          adapter = "codellama",
        },
      },
      adapters = {
        http = {
          anthropic = function()
            return require("codecompanion.adapters").extend("anthropic", {
              env = {
                api_key = "ANTHROPIC_API_KEY",
              },
            })
          end,
          gemini = function()
            return require("codecompanion.adapters").extend("gemini", {
              env = {
                api_key = "GEMINI_API_KEY",
              },
            })
          end,
          ollama = function()
            return require("codecompanion.adapters").extend("ollama", {
              -- Local Ollama configuration
              schema = {
                model = {
                  default = "codellama:7b",
                },
              },
            })
          end,
        },
        acp = {
          claude_code = function()
            return require("codecompanion.adapters").extend("claude_code", {
              -- Claude Code ACP adapter configuration
              defaults = {
                auth_method = "claude-code",
              },
            })
          end,
        },
      },
    })
  end,
  keys = {
    { "<C-a>", "<cmd>CodeCompanionActions<cr>", mode = { "n", "v" }, desc = "CodeCompanion Actions" },
    { "<Leader>a", "<cmd>CodeCompanionChat Toggle<cr>", mode = { "n", "v" }, desc = "CodeCompanion Chat" },
    { "ga", "<cmd>CodeCompanionChat Add<cr>", mode = "v", desc = "CodeCompanion Add" },
    { "<Leader>ai", "<cmd>CodeCompanionInline<cr>", mode = "v", desc = "CodeCompanion Inline" },
    -- Quick adapter switching (use actions menu to select)
    {
      "<Leader>ao",
      function()
        vim.cmd("CodeCompanionChat")
      end,
      mode = { "n", "v" },
      desc = "CodeCompanion Chat (Local)",
    },
  },
}

